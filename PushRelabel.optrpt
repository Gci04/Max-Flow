Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: GenericPushRelabel(Network *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GenericPushRelabel(Network *)) [1] PushRelabel.cpp(26,1)
  -> (29,5) Init_Preflow(Network *)
  -> (31,39) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
  -> INLINE: (32,2) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (32,9) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (32,9) overFlowingVertex(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
    -> INLINE: (200,35) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
    -> INLINE: (200,35) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
    -> INLINE: (202,15) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)
  -> (32,27) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
  -> INLINE: (32,27) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,35) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
  -> INLINE: (34,35) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
  -> INLINE: (37,25) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)
  -> INLINE: (37,60) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)
  -> INLINE: (39,7) TryPush(Vertex *)
    -> INLINE: (84,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (84,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (86,20) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (88,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (88,57) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (91,4) Push(Vertex *, Vertex *, Edge *)
      -> INLINE: (107,14) std::__1::min<int>(const int &, const int &)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (115,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
      -> INLINE: (115,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
      -> INLINE: (117,16) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
      -> INLINE: (119,13) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
      -> INLINE: (126,36) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
      -> INLINE: (126,36) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
      -> INLINE: (128,17) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
      -> INLINE: (130,14) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
      -> INLINE: (132,37) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
      -> INLINE: (132,37) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
      -> INLINE: (134,18) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
      -> INLINE: (136,30) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (91,21) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (39,23) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)
  -> INLINE: (41,5) Relabel(Vertex *)
    -> INLINE: (186,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (186,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (188,20) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (189,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (189,57) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (191,16) std::__1::min<int>(const int &, const int &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (41,21) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(34,35)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new(226,10) ]

   LOOP BEGIN at PushRelabel.cpp(200,44) inlined into PushRelabel.cpp(32,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(202,20) ]
   LOOP END

   LOOP BEGIN at PushRelabel.cpp(34,35)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(37,37) ]

      LOOP BEGIN at PushRelabel.cpp(84,31) inlined into PushRelabel.cpp(39,7)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(86,24) ]

         LOOP BEGIN at PushRelabel.cpp(115,35) inlined into PushRelabel.cpp(39,7)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(117,20) ]
         LOOP END

         LOOP BEGIN at PushRelabel.cpp(126,36) inlined into PushRelabel.cpp(39,7)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(128,21) ]
         LOOP END

         LOOP BEGIN at PushRelabel.cpp(132,37) inlined into PushRelabel.cpp(39,7)
            remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(134,22) ]
         LOOP END
      LOOP END

      LOOP BEGIN at PushRelabel.cpp(186,31) inlined into PushRelabel.cpp(41,5)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(188,24) ]
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1643,17):remark #34026: call to _memcpy implemented as a call to optimized library version
PushRelabel.cpp(26,1):remark #34051: REGISTER ALLOCATION : [__Z18GenericPushRelabelP7Network] PushRelabel.cpp:26

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     371
            Global    :     114
            Local     :     257
        Regenerable   :      34
        Spilled       :      29
        
    Routine stack
        Variables     :      96 bytes*
            Reads     :      22 [4.17e+01 ~ 10.8%]
            Writes    :      17 [1.91e+01 ~ 5.0%]
        Spills        :     184 bytes*
            Reads     :      58 [6.00e+00 ~ 1.6%]
            Writes    :      33 [4.28e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::__vector_base<Vertex *, std::__1::allocator<Vertex *>>::~__vector_base(std::__1::__vector_base<Vertex *, std::__1::allocator<Vertex *>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(441,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113__vector_baseIP6VertexNS_9allocatorIS2_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:441

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(450,28):remark #34051: REGISTER ALLOCATION : [__ZNSt3__16vectorIP6VertexNS_9allocatorIS2_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:450

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: TryPush(Vertex *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (TryPush(Vertex *)) [11] PushRelabel.cpp(77,1)
  -> INLINE: (84,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (84,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (86,20) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (88,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (88,57) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (91,4) Push(Vertex *, Vertex *, Edge *)
    -> INLINE: (107,14) std::__1::min<int>(const int &, const int &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (115,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (115,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (117,16) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (119,13) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (126,36) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (126,36) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (128,17) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (130,14) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (132,37) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (132,37) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
    -> INLINE: (134,18) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
    -> INLINE: (136,30) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (91,21) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(84,31)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at PushRelabel.cpp(115,35) inlined into PushRelabel.cpp(91,4)
      remark #15523: loop was not vectorized: loop control variable _j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at PushRelabel.cpp(126,36) inlined into PushRelabel.cpp(91,4)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at PushRelabel.cpp(132,37) inlined into PushRelabel.cpp(91,4)
      remark #15523: loop was not vectorized: loop control variable _j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(77,1):remark #34051: REGISTER ALLOCATION : [__Z7TryPushP6Vertex] PushRelabel.cpp:77

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     210
            Global    :      71
            Local     :     139
        Regenerable   :      18
        Spilled       :      14
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       1 [7.06e-02 ~ 0.2%]
            Writes    :       2 [1.41e-01 ~ 0.3%]
        Spills        :      96 bytes*
            Reads     :      44 [1.09e+00 ~ 2.7%]
            Writes    :      23 [6.45e-01 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Push(Vertex *, Vertex *, Edge *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Push(Vertex *, Vertex *, Edge *)) [12] PushRelabel.cpp(106,1)
  -> INLINE: (107,14) std::__1::min<int>(const int &, const int &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (115,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (117,16) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (119,13) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (126,36) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (126,36) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (128,17) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (130,14) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (132,37) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (132,37) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (134,18) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (136,30) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(115,35)
   remark #15523: loop was not vectorized: loop control variable _j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at PushRelabel.cpp(126,36)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at PushRelabel.cpp(132,37)
   remark #15523: loop was not vectorized: loop control variable _j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(106,1):remark #34051: REGISTER ALLOCATION : [__Z4PushP6VertexS0_P4Edge] PushRelabel.cpp:106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     161
            Global    :      52
            Local     :     109
        Regenerable   :      15
        Spilled       :       7
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       1 [1.00e+00 ~ 0.8%]
            Writes    :       2 [2.00e+00 ~ 1.5%]
        Spills        :      16 bytes*
            Reads     :       7 [1.10e+00 ~ 0.8%]
            Writes    :       4 [1.29e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: TryRelabel(Vertex *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (TryRelabel(Vertex *)) [13] PushRelabel.cpp(152,1)
  -> INLINE: (158,23) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (159,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (159,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (161,20) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (163,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (163,57) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(159,31)
   remark #15523: loop was not vectorized: loop control variable _i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(152,1):remark #34051: REGISTER ALLOCATION : [__Z10TryRelabelP6Vertex] PushRelabel.cpp:152

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      70
            Global    :      30
            Local     :      40
        Regenerable   :       6
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [1.53e-01 ~ 0.4%]
            Writes    :       4 [1.53e-01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Relabel(Vertex *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Relabel(Vertex *)) [14] PushRelabel.cpp(179,1)
  -> INLINE: (186,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (186,31) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (188,20) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (189,35) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (189,57) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (191,16) std::__1::min<int>(const int &, const int &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(186,31)
   remark #15523: loop was not vectorized: loop control variable _i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(179,1):remark #34051: REGISTER ALLOCATION : [__Z7RelabelP6Vertex] PushRelabel.cpp:179

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      62
            Global    :      26
            Local     :      36
        Regenerable   :       5
        Spilled       :       6
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [1.66e-01 ~ 0.5%]
            Writes    :       3 [2.13e-01 ~ 0.7%]
        Spills        :      40 bytes*
            Reads     :       5 [1.92e-01 ~ 0.6%]
            Writes    :       5 [1.92e-01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: overFlowingVertex(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (overFlowingVertex(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)) [15] PushRelabel.cpp(199,1)
  -> INLINE: (200,35) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
  -> INLINE: (200,35) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
  -> INLINE: (202,15) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(200,44)
   remark #15523: loop was not vectorized: loop control variable _i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(199,1):remark #34051: REGISTER ALLOCATION : [__Z17overFlowingVertexNSt3__16vectorIP6VertexNS_9allocatorIS2_EEEE] PushRelabel.cpp:199

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      11
            Local     :      13
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [1.10e+00 ~ 2.6%]
            Writes    :       2 [1.10e+00 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UpdateOriginalNetwork(Network *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (UpdateOriginalNetwork(Network *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)) [16] PushRelabel.cpp(207,84)
  -> (208,56) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
  -> INLINE: (209,43) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
  -> INLINE: (209,43) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size(const std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *) const
  -> INLINE: (210,60) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::operator[](std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *, std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::size_type)
  -> INLINE: (211,41) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (211,41) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (214,5) std::__1::vector<Vertex *, std::__1::allocator<Vertex *>>::~vector(std::__1::vector<Vertex *, std::__1::allocator<Vertex *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(209,43)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(210,65) ]
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(207,84):remark #34051: REGISTER ALLOCATION : [__Z21UpdateOriginalNetworkP7NetworkNSt3__16vectorIP6VertexNS1_9allocatorIS4_EEEE] PushRelabel.cpp:207

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r12]
        
    Routine temporaries
        Total         :      45
            Global    :      10
            Local     :      35
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       5 [1.30e+01 ~ 13.6%]
            Writes    :       2 [2.50e-01 ~ 0.3%]
        Spills        :       8 bytes*
            Reads     :       2 [9.88e-01 ~ 1.0%]
            Writes    :       1 [9.88e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::__vector_base<Edge, std::__1::allocator<Edge>>::~__vector_base(std::__1::__vector_base<Edge, std::__1::allocator<Edge>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(441,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113__vector_baseI4EdgeNS_9allocatorIS1_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:441

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::vector<Edge, std::__1::allocator<Edge>>::~vector(std::__1::vector<Edge, std::__1::allocator<Edge>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(450,28):remark #34051: REGISTER ALLOCATION : [__ZNSt3__16vectorI4EdgeNS_9allocatorIS1_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:450

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Init_Preflow(Network *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Init_Preflow(Network *)) [122] PushRelabel.cpp(9,1)
  -> INLINE: (11,38) std::__1::vector<Edge, std::__1::allocator<Edge>>::vector(std::__1::vector<Edge, std::__1::allocator<Edge>> *, const std::__1::vector<Edge, std::__1::allocator<Edge>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (11,38) std::__1::vector<Edge, std::__1::allocator<Edge>>::~vector(std::__1::vector<Edge, std::__1::allocator<Edge>> *)
  -> INLINE: (13,44) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (13,44) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const
  -> INLINE: (14,28) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (16,30) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (20,32) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (20,61) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (20,85) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (21,13) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (21,47) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)
  -> INLINE: (22,2) std::__1::vector<Edge, std::__1::allocator<Edge>>::~vector(std::__1::vector<Edge, std::__1::allocator<Edge>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at PushRelabel.cpp(13,44)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ PushRelabel.cpp(16,34) ]
LOOP END

    Report from: Code generation optimizations [cg]

PushRelabel.cpp(17,6):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1643,17):remark #34026: call to _memcpy implemented as a call to optimized library version
PushRelabel.cpp(9,1):remark #34051: REGISTER ALLOCATION : [__Z12Init_PreflowP7Network] PushRelabel.cpp:9

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     164
            Global    :      45
            Local     :     119
        Regenerable   :      21
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      14 [5.07e+01 ~ 11.4%]
            Writes    :      14 [2.56e+01 ~ 5.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

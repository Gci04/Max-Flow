Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: Vertex::addEdge(Vertex *, const Edge &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::addEdge(Vertex *, const Edge &)) [3] Vertex.cpp(3,40)
  -> INLINE: (5,12) std::__1::vector<Edge, std::__1::allocator<Edge>>::push_back(std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::const_reference)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7,11) std::__1::vector<Edge, std::__1::allocator<Edge>>::push_back(std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::const_reference)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (9,12) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (9,47) std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>> *, std::__1::basic_ostream<char, std::__1::char_traits<char>> &(*)(std::__1::basic_ostream<char, std::__1::char_traits<char>> &))
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2208,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1676,17):remark #34026: call to _memcpy implemented as a call to optimized library version
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1676,17):remark #34026: call to _memcpy implemented as a call to optimized library version
Vertex.cpp(3,40):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex7addEdgeERK4Edge] Vertex.cpp:3

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     336
            Global    :      92
            Local     :     244
        Regenerable   :      63
        Spilled       :       8
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :      12 [1.03e+00 ~ 1.5%]
            Writes    :      32 [5.02e-02 ~ 0.1%]
        Spills        :      16 bytes*
            Reads     :       2 [4.15e-02 ~ 0.1%]
            Writes    :       3 [2.42e-01 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<Edge, std::__1::allocator<Edge>>::value_type, std::__1::vector<Edge, std::__1::allocator<Edge>>::allocator_type &>::~__split_buffer(std::__1::__split_buffer<std::__1::vector<Edge, std::__1::allocator<Edge>>::value_type, std::__1::vector<Edge, std::__1::allocator<Edge>>::allocator_type &> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(340,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__114__split_bufferI4EdgeRNS_9allocatorIS1_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:340

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      25
            Global    :      10
            Local     :      15
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getEdgesOut(Vertex *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getEdgesOut(Vertex *)) [13] Vertex.cpp(13,42)


    Report from: Code generation optimizations [cg]

Vertex.cpp(13,42):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex11getEdgesOutEv] Vertex.cpp:13

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getEdgesOut(const Vertex *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getEdgesOut(const Vertex *) const) [14] Vertex.cpp(17,54)


    Report from: Code generation optimizations [cg]

Vertex.cpp(17,54):remark #34051: REGISTER ALLOCATION : [__ZNK6Vertex11getEdgesOutEv] Vertex.cpp:17

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getEdgesIn(Vertex *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getEdgesIn(Vertex *)) [15] Vertex.cpp(22,1)


    Report from: Code generation optimizations [cg]

Vertex.cpp(22,1):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex10getEdgesInEv] Vertex.cpp:22

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getEdgesIn(const std::__1::vector<Edge, std::__1::allocator<Edge>> *, const Vertex *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getEdgesIn(const std::__1::vector<Edge, std::__1::allocator<Edge>> *, const Vertex *) const) [16] Vertex.cpp(27,52)
  -> INLINE: (28,9) std::__1::vector<Edge, std::__1::allocator<Edge>>::vector(std::__1::vector<Edge, std::__1::allocator<Edge>> *, const std::__1::vector<Edge, std::__1::allocator<Edge>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1643,17):remark #34026: call to _memcpy implemented as a call to optimized library version
Vertex.cpp(27,52):remark #34051: REGISTER ALLOCATION : [__ZNK6Vertex10getEdgesInEv] Vertex.cpp:27

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbp rsi rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      54
            Global    :      16
            Local     :      38
        Regenerable   :       6
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::__vector_base<Edge, std::__1::allocator<Edge>>::~__vector_base(std::__1::__vector_base<Edge, std::__1::allocator<Edge>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(441,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113__vector_baseI4EdgeNS_9allocatorIS1_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:441

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::sizeEdgesOut(const Vertex *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::sizeEdgesOut(const Vertex *) const) [19] Vertex.cpp(31,33)
  -> INLINE: (32,23) std::__1::vector<Edge, std::__1::allocator<Edge>>::size(const std::__1::vector<Edge, std::__1::allocator<Edge>> *) const


    Report from: Code generation optimizations [cg]

Vertex.cpp(31,33):remark #34051: REGISTER ALLOCATION : [__ZNK6Vertex12sizeEdgesOutEv] Vertex.cpp:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       0
            Local     :      20
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::setIndex(Vertex *, size_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::setIndex(Vertex *, size_t)) [20] Vertex.cpp(35,39)


    Report from: Code generation optimizations [cg]

Vertex.cpp(35,39):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex8setIndexEm] Vertex.cpp:35

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getIndex(const Vertex *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getIndex(const Vertex *) const) [21] Vertex.cpp(39,33)


    Report from: Code generation optimizations [cg]

Vertex.cpp(39,33):remark #34051: REGISTER ALLOCATION : [__ZNK6Vertex8getIndexEv] Vertex.cpp:39

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::setEdgeIn(Vertex *, size_t, Edge)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::setEdgeIn(Vertex *, size_t, Edge)) [22] Vertex.cpp(43,47)
  -> INLINE: (44,9) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)


    Report from: Code generation optimizations [cg]

Vertex.cpp(43,47):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex9setEdgeInEm4Edge] Vertex.cpp:43

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      16
            Global    :       0
            Local     :      16
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::setEdgeOut(Vertex *, size_t, Edge)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::setEdgeOut(Vertex *, size_t, Edge)) [23] Vertex.cpp(47,48)
  -> INLINE: (48,10) std::__1::vector<Edge, std::__1::allocator<Edge>>::operator[](std::__1::vector<Edge, std::__1::allocator<Edge>> *, std::__1::vector<Edge, std::__1::allocator<Edge>>::size_type)


    Report from: Code generation optimizations [cg]

Vertex.cpp(47,48):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex10setEdgeOutEm4Edge] Vertex.cpp:47

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      16
            Global    :       0
            Local     :      16
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::setHeight(Vertex *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::setHeight(Vertex *, int)) [24] Vertex.cpp(52,1)


    Report from: Code generation optimizations [cg]

Vertex.cpp(52,1):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex9setHeightEi] Vertex.cpp:52

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getHeight(const Vertex *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getHeight(const Vertex *) const) [25] Vertex.cpp(57,1)


    Report from: Code generation optimizations [cg]

Vertex.cpp(57,1):remark #34051: REGISTER ALLOCATION : [__ZNK6Vertex9getHeightEv] Vertex.cpp:57

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::addEcxess(Vertex *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::addEcxess(Vertex *, int)) [26] Vertex.cpp(62,1)


    Report from: Code generation optimizations [cg]

Vertex.cpp(62,1):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex9addEcxessEi] Vertex.cpp:62

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::setEcxess(Vertex *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::setEcxess(Vertex *, int)) [27] Vertex.cpp(67,1)


    Report from: Code generation optimizations [cg]

Vertex.cpp(67,1):remark #34051: REGISTER ALLOCATION : [__ZN6Vertex9setEcxessEi] Vertex.cpp:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Vertex::getExcess(const Vertex *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Vertex::getExcess(const Vertex *) const) [28] Vertex.cpp(72,1)


    Report from: Code generation optimizations [cg]

Vertex.cpp(72,1):remark #34051: REGISTER ALLOCATION : [__ZNK6Vertex9getExcessEv] Vertex.cpp:72

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream(1002,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:1002

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      37
            Global    :      13
            Local     :      24
        Regenerable   :       7
        Spilled       :       2
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
